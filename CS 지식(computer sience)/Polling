데이터 폴링이란...

일반적인 HTTP 통신은
유저가 요청을 보낼 때만 서버가 응답하는 단방향 통신이며
서버로부터 응답받은 후 바로 연결 종료합니다.

​특히 HTTP의 특성상 무상태성 때문에
request, response 형태로 단방향 통신을 수행합니다.
서버에서 클라이언트로 역으로 요청하는 건 불가능하지요.
서버는 서버답게 응답을 받는 것만 가능합니다.
클라이언트로써 역할을 하려면 새로운 응답을 보내는 수 밖에 없는데, 이 또한 단방향 입니다.

하지만 통신의 발달로 서버에서 반대로 클라이언트에 요청해야 할 일들이 생기게 되었습니다.
HTTP 프로토콜은 단방향이기 때문에 지속해서 HTTP 요청을 해야 합니다.
이것이 가장 초기 모델 polling이라는 기법입니다.


폴링은 데이터 통신 방법의 하나로
"하나의 장치(또는 프로그램)가 충돌 회피 또는 동기화 처리 등을 목적으로 다른 장치(또는 프로그램)의
상태를 주기적으로 검사하여 일정한 조건을 만족할 때 송수신 등의 자료 처리를 하는 방식을 말합니다."

실시간처럼 보이는 웹사이트들은 클라이언트가 서버에게 일정한 주기를 가지고 응답을 주고받는 폴링 방식을 사용합니다.
이는 AJAX polling이라고도 불리는데 주로 AJAX 호출을 사용하기 때문입니다.


폴링의 문제점
1. 폴링의 주기가 짧으면 서버의 성능에 부담이 간다.
2. 주기가 길면 실시간성이 떨어진다.
3. 실시간으로 주는 건 불가능하다. 실시간 효과를 내려면 간격을 줄여야 하지만 서버와 클라이언트 모두에게 부담이다.
4. 보낼 데이터가 없어도 계속해서 데이터를 줘야 하므로 서버의 리소스를 낭비하게 된다.

​폴링의 장점
1. Loop() 문 내에서 반복적으로 외부 입력을 감시하는 문법 (절차도 지향적). 소프트웨어 구현이 간편하다는 장점이 있다.
2. 계속해서 일괄적으로 요청을 할 수 있다.
3. 그래프를 그리거나 대용량의 데이터를 처리해야 한다면 http polling은 아직도 유효하며 오히려 매우 간단하고 최적화된 방식이다.

